{
  "ZaminConfigurations": {
    "ServiceId": "MiniBlogService01",
    "JsonSerializerTypeName": "NewtonSoftSerializer",
    "ExcelSerializerTypeName": "EPPlusExcelSerializer",
    "UserInfoServiceTypeName": "FakeUserInfoService",
    "UseFakeUserService": true,
    "RegisterRepositories": true,
    "RegisterHandlers": true,
    "RegisterAutomapperProfiles": true,
    "AssmblyNameForLoad": "MiniBlog,Zamin",
    "Translator": {
      "TranslatorTypeName": "ParrotTranslator",
      "ParrotTranslator": {
        "ConnectionString": "Server =.; Database=MiniBlogDb ;User Id =sa;Password=123456; MultipleActiveResultSets=true",
        "autoCreateSqlTable": true,
        "SelectCommand": "Select * from ParrotTranslations",
        "InsertCommand": "INSERT INTO [dbo].[ParrotTranslations]([Key],[Value],[Culture]) VALUES (@Key,@Value,@Culture) select SCOPE_IDENTITY()"
      }
    },
    "MessageBus": {
      "MessageBusTypeName": "RabbitMq",
      "MessageConsumerTypeName": "IdempotentMessageConsumer",
      "RabbitMq": {
        "UserName": "guest",
        "Password": "guest",
        "Host": "localhost",
        "Port": "5672",
        "VirualHost": "/",
        "Protocol": "amqp",
        "ExchangeName": "MiniBlogExchange",
        "ExchangeDurable": false,
        "ExchangeAutoDeleted": false
      }
    },
    "MessageConsumer": {
      "Enabled": true,
      "MessageInboxStoreTypeName": "SqlMessageInboxItemRepository",
      "SqlMessageInboxStore": {
        "ConnectionString": "Server =.; Database=MiniBlogDb ;User Id =sa;Password=123456; MultipleActiveResultSets=true"
      },
      "Commands": [
        {
          "CommandName": "TestCommand",
          "MapToClass": "Zamin.MiniBlog.Core.ApplicationServices.People.Commands.TestCommands.TestCommand, Zamin.MiniBlog.Core.ApplicationServices"
        },
        {
          "CommandName": "PTestCommand",
          "MapToClass": "Zamin.MiniBlog.Core.ApplicationServices.People.Commands.PTestCommands.PTestCommand, Zamin.MiniBlog.Core.ApplicationServices"
        }
      ],
      "Events": [
        {
          "FromServiceId": "MiniBlogService01",
          "EventData": [
            {
              "EventName": "PersonCreated",
              "MapToClass": "Zamin.MiniBlog.Core.Domain.People.Events.PersonCreated, Zamin.MiniBlog.Core.Domain"
            },
            {
              "EventName": "PersonUpdated",
              "MapToClass": "Zamin.MiniBlog.Core.Domain.People.Events.PersonUpdated, Zamin.MiniBlog.Core.Domain"
            }
          ]
        }
      ]
    },
    "PoolingPublisher": {
      "Enabled": true,
      "OutBoxRepositoryTypeName": "SqlOutBoxEventItemRepository",
      "SqlOutBoxEvent": {
        "ConnectionString": "Server =.; Database=MiniBlogDb ;User Id =sa;Password=123456; MultipleActiveResultSets=true",
        "SelectCommand": "Select top {0} * from OutBoxEventItems where IsProcessed = 0",
        "UpdateCommand": "Update OutBoxEventItems set IsProcessed = 1 where OutBoxEventItemId in ({0})"
      },
      "SendOutBoxInterval": 5,
      "SendOutBoxCount": 100
    },
    "EntityChangeInterception": {
      "Enabled": true,
      "EntityChageInterceptorRepositoryTypeName": "FakeEntityChageInterceptorItemRepository"
    },
    "ApplicationEvents": {
      "TransactionalEventsEnabled": true,
      "RaiseInmemoryEvents": false
    },
    "Swagger": {
      "Enabled": true,
      "SwaggerDoc": {
        "Version": "v1",
        "Title": "Mini Blog",
        "Name": "v1",
        "URL": "/swagger/v1/swagger.json"
      }
    },
    "Caching": {
      "Enable": true,
      "EnableQueryAutomaticCache": true,
      "Provider": "MemoryCache",
      "DistributedSqlServerCache": {
        "ConnectionString": "Server =.; Database=Zamin_Cache ;User Id =sa;Password=1qaz!QAZ; MultipleActiveResultSets=true",
        "SchemaName": "dbo",
        "TableName": "CacheTable"
      },
      "StackExchangeRedisCache": {
        "Configuration": "localhost",
        "SampleInstance": "SampleInstance"
      },
      "NCacheDistributedCache": {
        "CacheName": "demoClusteredCache",
        "EnableLogs": true,
        "ExceptionsEnabled": true
      },
      "Policies": [
        {
          "Name": "Default",
          "Order": 1,
          "AbsoluteExpiration": null,
          "SlidingExpiration": 60,
          "Includes": [ "*" ],
          "Excludes": [ "-" ]
        }
      ]
    }
  }
}
